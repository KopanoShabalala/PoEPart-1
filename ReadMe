🛡️ CyberSecurity Chatbot — SecureBot (PoE Project)
Welcome to SecureBot, a cybersecurity awareness chatbot developed as part of my Project of Evidence (PoE) for Programming.

This solution consists of three evolving parts:

Part 1: Basic console chatbot with voice greeting and ASCII art

Part 2: Enhanced console chatbot with sentiment detection, keyword recognition, and more dynamic responses

Part 3: Fully-featured WPF GUI application with tasks, reminders, NLP keyword detection, quizzes, theme switching, and an activity log.
Feature                             | Part 1 | Part 2 | Part 3 (WPF GUI) |
  |
Voice greeting                      | ✅      | ✅      | ✅                
ASCII art and animated intro        | ✅      | ✅      | ✅                
User input validation               | ✅      | ✅      | ✅                
Cybersecurity keyword responses     | ✅      | ✅      | ✅                
Sentiment/emotion detection         | ❌      | ✅      | ✅                
Task creation and management        | ❌      | ❌      | ✅                
Reminder system                     | ❌      | ❌      | ✅                
Quiz with feedback                  | ❌      | ❌      | ✅                
Theme switching (light/dark)        | ❌      | ❌      | ✅                
Activity log (chat history/actions) | ❌      | ❌      | ✅                
Chat memory recall (last topic)     | ❌      | ✅      | ✅                
CyberChatBot/
 Part1.cs                 Console App - Basic Bot
 Part2.cs                 Console App - Advanced Bot 
 CyberChatBotWPF/         WPF GUI app (Main project folder) 
- MainWindow.xaml         UI Layout
- MainWindow.xaml.cs      Core chatbot logic
- CyberTask.cs            Task data class
- QuizWindow.xaml/.cs     Quiz interface and logic
- greeting.wav            Audio file
- Resources, Assets, etc.
- README.md                  This file

Technologies used
C# (.NET Core & WPF)
Regex for NLP/keyword detection
DispatcherTimer for reminders
LINQ & Collections for task/activity management

How to Run
Console App
1. Open in Visual Studio run Part1.cs or Part2.cs
WPF GUI App
1. Open CyberChatBotWPF in Visual Studio.
2. Build and run. Chat,add tasks, take a quiz or change themes.

